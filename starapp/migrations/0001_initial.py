# Generated by Django 4.1.4 on 2022-12-11 21:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Advance',
            fields=[
                ('av_num', models.AutoField(help_text='System generated number uniquely identifying a receipt', primary_key=True, serialize=False, verbose_name='Number')),
                ('av_period', models.IntegerField(help_text='Period in which transaction occurred', verbose_name='Period')),
                ('av_trans_date', models.DateTimeField(auto_now=True, help_text='Transaction Date', verbose_name='Transaction Date')),
                ('av_value_date', models.DateTimeField(blank=True, help_text='Transaction s value date', null=True, verbose_name='Value Date')),
                ('av_due_date', models.DateTimeField(blank=True, help_text='Transaction s due date', null=True, verbose_name='Due Date')),
                ('av_ramount', models.DecimalField(decimal_places=2, default=0, help_text='Requested amount', max_digits=15, verbose_name='Requested Amount')),
                ('av_aamount', models.DecimalField(decimal_places=2, default=0, help_text='Advanced amount', max_digits=15, verbose_name='Advanced Amount')),
                ('av_repay_plan', models.IntegerField(default=0, help_text='Repayment Plan', verbose_name='Repayment Plan')),
                ('av_pay_ref', models.CharField(help_text='The payment reference', max_length=1, verbose_name='Payment Ref')),
                ('av_disb', models.CharField(choices=[('1', 'Pending'), ('2', 'Disbursed')], help_text='Indicates advance waas disbursed', max_length=1, verbose_name='Disbursed ?')),
                ('av_status', models.CharField(choices=[('1', 'Applied'), ('2', 'Approved'), ('3', 'Declined')], help_text='Indicates the status of the advance', max_length=1, verbose_name='Status')),
                ('av_pay_type', models.CharField(choices=[('1', 'Cheque'), ('2', 'Transfer'), ('3', 'Cash'), ('4', 'Mobile Money')], help_text='Payment Type', max_length=1, verbose_name='Payment Type')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Number',
                'ordering': ['av_num'],
            },
        ),
        migrations.CreateModel(
            name='Fund',
            fields=[
                ('fd_num', models.AutoField(help_text='System generated number uniquely identifying a fund', primary_key=True, serialize=False, verbose_name='Number')),
                ('fd_period', models.IntegerField(help_text='Period in which transaction occurred', verbose_name='Period')),
                ('fd_trans_date', models.DateTimeField(auto_now=True, help_text='Transaction Date', verbose_name='Transaction Date')),
                ('fd_pamount', models.DecimalField(decimal_places=2, default=0, help_text='The projected transaction amount', max_digits=15, verbose_name='Projected Amount')),
                ('fd_aamount', models.DecimalField(decimal_places=2, default=0, help_text='The actual transaction amount', max_digits=15, verbose_name='Actual Amount')),
                ('fd_pay_ref', models.CharField(help_text='The payment reference', max_length=1, verbose_name='Payment Ref')),
                ('fd_paid', models.CharField(default='N', help_text='Indicates payment in settlement for this transaction', max_length=1, verbose_name='Paid')),
                ('fd_status', models.CharField(choices=[('1', 'Available'), ('2', 'Committed')], help_text='Indicates the status of the transaction', max_length=1, verbose_name='Status')),
                ('fd_processed', models.CharField(default='N', help_text='Indicates transaction has been processed', max_length=1, verbose_name='Processed')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Number',
                'ordering': ['fd_num'],
            },
        ),
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('gm_num', models.AutoField(help_text='System generated number uniquely identifying a group member', primary_key=True, serialize=False, verbose_name='Number')),
                ('gm_ref', models.CharField(help_text='Member s reference', max_length=20, verbose_name='Reference')),
                ('gm_fname', models.CharField(help_text='The member s first name', max_length=100, verbose_name='First Name')),
                ('gm_initials', models.CharField(help_text='The member s initials', max_length=5, verbose_name='Initials')),
                ('gm_nid', models.CharField(help_text='The member s national identification number', max_length=15, verbose_name='National identification Number')),
                ('gm_sname', models.CharField(help_text='The member s surname', max_length=100, verbose_name='Surname')),
                ('gm_cat', models.CharField(blank=True, choices=[('1', 'Member'), ('2', 'Borrower'), ('3', 'Type 3'), ('4', 'Type 4')], help_text='The member s category', max_length=1, null=True, verbose_name='Category')),
                ('gm_status', models.CharField(blank=True, choices=[('1', 'Application'), ('2', 'Activated'), ('3', 'Inactivated')], default='1', help_text='The member s status', max_length=1, null=True, verbose_name='Status')),
                ('gm_contact', models.CharField(blank=True, help_text='Contact person', max_length=50, null=True, verbose_name='Contact Person')),
                ('gm_mobile', models.IntegerField(blank=True, help_text='Contact person mobile number', null=True, verbose_name='Mobile Number')),
                ('gm_email', models.CharField(blank=True, help_text='Contact person email address', max_length=150, null=True, verbose_name='Email')),
                ('gm_address_1', models.CharField(blank=True, help_text='Contact person email address', max_length=150, null=True, verbose_name='Email')),
                ('gm_address_2', models.CharField(blank=True, help_text='Contact person email address', max_length=150, null=True, verbose_name='Email')),
                ('gm_address_3', models.CharField(blank=True, help_text='Contact person email address', max_length=150, null=True, verbose_name='Email')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Member number',
                'ordering': ['gm_num'],
            },
        ),
        migrations.CreateModel(
            name='GroupTab',
            fields=[
                ('gr_num', models.AutoField(help_text='System generated number uniquely identifying a group', primary_key=True, serialize=False, verbose_name='Number')),
                ('gr_code', models.CharField(help_text='Assigned group identifying code', max_length=5, verbose_name='Code')),
                ('gr_name', models.CharField(help_text='The group s name', max_length=100, verbose_name='Name')),
                ('gr_cat', models.CharField(blank=True, choices=[('1', 'Savings Club'), ('2', 'General Membership'), ('3', 'Congregational'), ('4', 'Others')], help_text='The group s category', max_length=1, null=True, verbose_name='Category')),
                ('gr_status', models.CharField(blank=True, choices=[('1', 'Application'), ('2', 'Activated'), ('3', 'Inactivated')], default='1', help_text='The group s status', max_length=1, null=True, verbose_name='Status')),
                ('gr_contact', models.CharField(blank=True, help_text='Contact person', max_length=50, null=True, verbose_name='Contact Person')),
                ('gr_mobile', models.IntegerField(blank=True, help_text='Contact person mobile number', null=True, verbose_name='Mobile Number')),
                ('gr_email', models.CharField(blank=True, help_text='Contact person email address', max_length=50, null=True, verbose_name='Email')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Group ID',
                'ordering': ['gr_num'],
            },
        ),
        migrations.CreateModel(
            name='MemberRecord',
            fields=[
                ('mr_num', models.AutoField(help_text='System generated number uniquely identifying a group member transaction', primary_key=True, serialize=False, verbose_name='Number')),
                ('mr_period', models.IntegerField(help_text='Period in which transaction occurred', verbose_name='Period')),
                ('mr_trans_date', models.DateTimeField(auto_now=True, help_text='Transaction Date', verbose_name='Transaction Date')),
                ('mr_value_date', models.DateTimeField(blank=True, help_text='Transaction s value date', null=True, verbose_name='Value Date')),
                ('mr_due_date', models.DateTimeField(blank=True, help_text='Transaction s due date', null=True, verbose_name='Due Date')),
                ('mr_pamount', models.DecimalField(decimal_places=2, default=0, help_text='The projected transaction amount', max_digits=15, verbose_name='Projected Amount')),
                ('mr_aamount', models.DecimalField(decimal_places=2, default=0, help_text='The actual transaction amount', max_digits=15, verbose_name='Actual Amount')),
                ('mr_pay_ref', models.CharField(help_text='The payment reference', max_length=1, verbose_name='Payment Ref')),
                ('mr_dr_cr', models.CharField(help_text='The Transaction is a debit or a credit', max_length=1, verbose_name='Debit/Credit')),
                ('mr_paid', models.CharField(default='N', help_text='Indicates payment in settlement for this transaction', max_length=1, verbose_name='Paid')),
                ('mr_status', models.CharField(choices=[('1', 'Live'), ('2', 'Reversed'), ('3', 'Cancelled')], help_text='Indicates the status of the transaction', max_length=1, verbose_name='Status')),
                ('mr_processed', models.CharField(default='N', help_text='Indicates transaction has been processed', max_length=1, verbose_name='Processed')),
                ('mr_pay_type', models.CharField(choices=[('1', 'Cheque'), ('2', 'Transfer'), ('3', 'Cash'), ('4', 'Mobile Money')], default='N', help_text='Payment type', max_length=1, verbose_name='Payment Type')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('mr_gm_num', models.ForeignKey(help_text='The member belongs', on_delete=django.db.models.deletion.CASCADE, to='starapp.groupmember', verbose_name='Member')),
                ('mr_gr_num', models.ForeignKey(help_text='Group to which the member belongs', on_delete=django.db.models.deletion.CASCADE, to='starapp.grouptab', verbose_name='Group')),
            ],
            options={
                'verbose_name': 'Number',
                'ordering': ['mr_num'],
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('pr_num', models.IntegerField(help_text='User Assigned Period', primary_key=True, serialize=False, verbose_name='Period')),
                ('pr_from_date', models.DateTimeField(help_text='Starting Date', verbose_name='From Date')),
                ('pr_to_date', models.DateTimeField(help_text='Ending Date', verbose_name='To Date')),
                ('pr_status', models.CharField(choices=[('1', 'Open'), ('2', 'Close')], default='2', help_text='The perioid s status', max_length=1, verbose_name='Status')),
                ('pr_proc_status', models.CharField(choices=[('1', 'Processed'), ('2', 'Pending')], default='2', help_text='The group s status', max_length=1, verbose_name='Processing Status')),
                ('pr_int_rate', models.DecimalField(decimal_places=2, default=0, help_text='Applicable interest rate', max_digits=5, verbose_name='Interest rate')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Period',
                'ordering': ['pr_num'],
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('rc_num', models.AutoField(help_text='System generated number uniquely identifying a receipt', primary_key=True, serialize=False, verbose_name='Number')),
                ('rc_period', models.IntegerField(help_text='Period in which transaction occurred', verbose_name='Period')),
                ('rc_trans_date', models.DateTimeField(auto_now=True, help_text='Transaction Date', verbose_name='Transaction Date')),
                ('rc_value_date', models.DateTimeField(blank=True, help_text='Transaction s value date', null=True, verbose_name='Value Date')),
                ('rc_due_date', models.DateTimeField(blank=True, help_text='Transaction s due date', null=True, verbose_name='Due Date')),
                ('rc_pamount', models.DecimalField(decimal_places=2, default=0, help_text='The projected transaction amount', max_digits=15, verbose_name='Projected Amount')),
                ('rc_aamount', models.DecimalField(decimal_places=2, default=0, help_text='The actual transaction amount', max_digits=15, verbose_name='Actual Amount')),
                ('rc_pay_ref', models.CharField(help_text='The payment reference', max_length=1, verbose_name='Payment Ref')),
                ('rc_dr_cr', models.CharField(help_text='The Transaction is a debit or a credit', max_length=1, verbose_name='Debit/Credit')),
                ('rc_paid', models.CharField(default='N', help_text='Indicates payment in settlement for this transaction', max_length=1, verbose_name='Paid')),
                ('rc_status', models.CharField(choices=[('1', 'Live'), ('2', 'Reversed'), ('3', 'Cancelled')], help_text='Indicates the status of the transaction', max_length=1, verbose_name='Status')),
                ('rc_processed', models.CharField(default='N', help_text='Indicates transaction has been processed', max_length=1, verbose_name='Processed')),
                ('rc_pay_type', models.CharField(choices=[('1', 'Cheque'), ('2', 'Transfer'), ('3', 'Cash'), ('4', 'Mobile Money')], default='3', help_text='Payment type', max_length=1, verbose_name='Payment Type')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('rc_gm_num', models.ForeignKey(help_text='The member belongs', on_delete=django.db.models.deletion.CASCADE, to='starapp.groupmember', verbose_name='Member')),
                ('rc_gr_num', models.ForeignKey(help_text='Group to which the member belongs', on_delete=django.db.models.deletion.CASCADE, to='starapp.grouptab', verbose_name='Group')),
                ('rc_mr_num', models.ForeignKey(help_text='The member transaction', on_delete=django.db.models.deletion.CASCADE, to='starapp.memberrecord', verbose_name='Member Record')),
            ],
            options={
                'verbose_name': 'Number',
                'ordering': ['rc_num'],
            },
        ),
        migrations.AddField(
            model_name='groupmember',
            name='gm_gr_num',
            field=models.ForeignKey(help_text='Group to which the member belongs', on_delete=django.db.models.deletion.CASCADE, to='starapp.grouptab', verbose_name='Group'),
        ),
        migrations.CreateModel(
            name='AdvanceTrans',
            fields=[
                ('at_num', models.AutoField(help_text='System generated number uniquely identifying advance transaction', primary_key=True, serialize=False, verbose_name='Number')),
                ('at_period', models.IntegerField(help_text='Period in which transaction occurred', verbose_name='Period')),
                ('at_trans_date', models.DateTimeField(auto_now=True, help_text='Transaction Date', verbose_name='Transaction Date')),
                ('at_value_date', models.DateTimeField(blank=True, help_text='Transaction s value date', null=True, verbose_name='Value Date')),
                ('at_due_date', models.DateTimeField(blank=True, help_text='Transaction s due date', null=True, verbose_name='Due Date')),
                ('at_amount', models.DecimalField(decimal_places=2, default=0, help_text='Transaction amount', max_digits=15, verbose_name='Transaction Amount')),
                ('at_bamount', models.DecimalField(decimal_places=2, default=0, help_text='Balance amount', max_digits=15, verbose_name='Balance')),
                ('at_pay_ref', models.CharField(help_text='The payment reference', max_length=1, verbose_name='Payment Ref')),
                ('at_status', models.CharField(choices=[('1', 'Live'), ('2', 'Pending'), ('3', 'Reversed')], help_text='Indicates the status of the Transaction', max_length=1, verbose_name='Status')),
                ('at_type', models.CharField(choices=[('1', 'Installment'), ('2', 'Interest'), ('3', 'Penalty')], help_text='Indicates the status of the Transaction', max_length=1, verbose_name='Transaction Type')),
                ('at_dr_cr', models.CharField(help_text='Indicates whether transaction is debit or credit', max_length=1, verbose_name='DR/CR')),
                ('at_pay_type', models.CharField(choices=[('1', 'Cheque'), ('2', 'Transfer'), ('3', 'Cash'), ('4', 'Mobile Money')], help_text='Payment Type', max_length=1, verbose_name='Payment Type')),
                ('ad_user_c', models.CharField(blank=True, help_text='The user creating the record', max_length=30, null=True)),
                ('ad_user_a', models.CharField(blank=True, help_text='The last amending user', max_length=30, null=True)),
                ('ad_date_c', models.DateTimeField(auto_now_add=True, help_text='Date record was created')),
                ('ad_date_a', models.DateTimeField(auto_now=True, help_text='Date record was last amended')),
                ('ad_device_c', models.CharField(blank=True, help_text='The Device creating the record', max_length=100, null=True)),
                ('ad_device_a', models.CharField(blank=True, help_text='The Last amending device', max_length=100, null=True)),
                ('ad_ipadress_c', models.CharField(blank=True, help_text='The record creating ip address', max_length=50, null=True)),
                ('ad_ipadress_a', models.CharField(blank=True, help_text='The last amending ip address', max_length=50, null=True)),
                ('at_av_num', models.ForeignKey(help_text='Advance from which this transaction is generated', on_delete=django.db.models.deletion.CASCADE, to='starapp.advance', verbose_name='Advance')),
                ('at_gm_num', models.ForeignKey(help_text='The member to which the transaction belongs', on_delete=django.db.models.deletion.CASCADE, to='starapp.groupmember', verbose_name='Member')),
            ],
            options={
                'verbose_name': 'Number',
                'ordering': ['at_num'],
            },
        ),
        migrations.AddField(
            model_name='advance',
            name='av_gm_num',
            field=models.ForeignKey(help_text='The member advanced money', on_delete=django.db.models.deletion.CASCADE, to='starapp.groupmember', verbose_name='Member'),
        ),
    ]
